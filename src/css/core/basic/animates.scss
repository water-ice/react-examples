$direction: down, up, left, right;
@each $key in $direction {
	.#{$prefix}-popup-#{$key} {
		@include animateSlide($key);
	}
}

.#{$prefix}-bg-mask {
	@include commonAbsolute(0, 0, 0, 0);
	@include commonSize(100%);
	background: $mask-bg-color;
	z-index: $mask-zindex;
	animation-name: animate-fadeIn;
	animation-duration: $mask-duration;
	animation-timing-function: $mask-timing;
}

.#{$prefix}-modal {
	@extend .#{$prefix}-bg-mask;
	@include commonFlexCc;
	> * {
		width: 210px / $scale;
		min-height: 100px / $scale;
		max-height: 90%;
		overflow: auto;
		z-index: $modal-zindex;
		background: $modal-bg-color;
		animation-name: animate-zoomIn;
		animation-duration: $modal-duration;
		animation-timing-function: $modal-timing;
	}
}
@keyframes animate-fadeIn {
	@include animateFade(0, 1);
}

@keyframes animate-fadeOut {
	@include animateFade(1, 0);
}

@keyframes animate-zoomIn {
	@include animateZoom(0, 1);
}

@keyframes animate-zoomOut {
	@include animateZoom(1, 0);
}

/**
 * [$direction 方向]
 * @type {[string]}
 */
$direction: down, up, left, right;
@each $key in $direction {
	@keyframes animate-slide-#{$key} {
		$start: 0, 100%;
		@if ($key == 'down') {
			$start: 0, 100%;
		} @else if ($key == 'up') {
			$start: 0, -100%;
		} @else if ($key == 'left') {
			$start: -100%, 0;
		} @else if ($key == 'right') {
			$start: 100%, 0;
		}
		0% {
			transform: translate(#{$start});
		}
		100% {
			transform: translate(0, 0);
		}
	}
}
